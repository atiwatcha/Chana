//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     //
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace chanenetWcf
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LineProgram", Namespace="http://schemas.datacontract.org/2004/07/chananet.DataContrac")]
    public partial class LineProgram : object
    {
        
        private string AccessTokenField;
        
        private string ClientSecretField;
        
        private int idField;
        
        private string redirect_uriField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessToken
        {
            get
            {
                return this.AccessTokenField;
            }
            set
            {
                this.AccessTokenField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientSecret
        {
            get
            {
                return this.ClientSecretField;
            }
            set
            {
                this.ClientSecretField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string redirect_uri
        {
            get
            {
                return this.redirect_uriField;
            }
            set
            {
                this.redirect_uriField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProcessResoult", Namespace="http://schemas.datacontract.org/2004/07/chananet.DataContrac")]
    public partial class ProcessResoult : object
    {
        
        private string MessageField;
        
        private bool SuccessField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message
        {
            get
            {
                return this.MessageField;
            }
            set
            {
                this.MessageField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success
        {
            get
            {
                return this.SuccessField;
            }
            set
            {
                this.SuccessField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LineUser", Namespace="http://schemas.datacontract.org/2004/07/chananet.DataContrac")]
    public partial class LineUser : object
    {
        
        private string AccessTokenField;
        
        private int LineProgram_idField;
        
        private string PasswordField;
        
        private string UsernameField;
        
        private int idField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessToken
        {
            get
            {
                return this.AccessTokenField;
            }
            set
            {
                this.AccessTokenField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LineProgram_id
        {
            get
            {
                return this.LineProgram_idField;
            }
            set
            {
                this.LineProgram_idField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password
        {
            get
            {
                return this.PasswordField;
            }
            set
            {
                this.PasswordField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username
        {
            get
            {
                return this.UsernameField;
            }
            set
            {
                this.UsernameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="chanenetWcf.IServiceInterface")]
    public interface IServiceInterface
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceInterface/getlineProgram", ReplyAction="http://tempuri.org/IServiceInterface/getlineProgramResponse")]
        System.Threading.Tasks.Task<chanenetWcf.LineProgram> getlineProgramAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceInterface/LineRegisterUser", ReplyAction="http://tempuri.org/IServiceInterface/LineRegisterUserResponse")]
        System.Threading.Tasks.Task<chanenetWcf.ProcessResoult> LineRegisterUserAsync(int User_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceInterface/sentNotify", ReplyAction="http://tempuri.org/IServiceInterface/sentNotifyResponse")]
        System.Threading.Tasks.Task<chanenetWcf.ProcessResoult> sentNotifyAsync(string Message);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceInterface/getlineUser", ReplyAction="http://tempuri.org/IServiceInterface/getlineUserResponse")]
        System.Threading.Tasks.Task<chanenetWcf.getlineUserResponse> getlineUserAsync(chanenetWcf.getlineUserRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceInterface/getAccesTokenUser", ReplyAction="http://tempuri.org/IServiceInterface/getAccesTokenUserResponse")]
        System.Threading.Tasks.Task<chanenetWcf.ProcessResoult> getAccesTokenUserAsync(string code, System.Nullable<int> id);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getlineUser", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getlineUserRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.Nullable<int> id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string UserName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string Password;
        
        public getlineUserRequest()
        {
        }
        
        public getlineUserRequest(System.Nullable<int> id, string UserName, string Password)
        {
            this.id = id;
            this.UserName = UserName;
            this.Password = Password;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getlineUserResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getlineUserResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public chanenetWcf.ProcessResoult getlineUserResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public chanenetWcf.LineUser[] List_LineUser;
        
        public getlineUserResponse()
        {
        }
        
        public getlineUserResponse(chanenetWcf.ProcessResoult getlineUserResult, chanenetWcf.LineUser[] List_LineUser)
        {
            this.getlineUserResult = getlineUserResult;
            this.List_LineUser = List_LineUser;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    public interface IServiceInterfaceChannel : chanenetWcf.IServiceInterface, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    public partial class ServiceInterfaceClient : System.ServiceModel.ClientBase<chanenetWcf.IServiceInterface>, chanenetWcf.IServiceInterface
    {
        
    /// <summary>
    /// Implement this partial method to configure the service endpoint.
    /// </summary>
    /// <param name="serviceEndpoint">The endpoint to configure</param>
    /// <param name="clientCredentials">The client credentials</param>
    static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public ServiceInterfaceClient() : 
                base(ServiceInterfaceClient.GetDefaultBinding(), ServiceInterfaceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IServiceInterface.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceInterfaceClient(EndpointConfiguration endpointConfiguration) : 
                base(ServiceInterfaceClient.GetBindingForEndpoint(endpointConfiguration), ServiceInterfaceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceInterfaceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ServiceInterfaceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceInterfaceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ServiceInterfaceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceInterfaceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<chanenetWcf.LineProgram> getlineProgramAsync()
        {
            return base.Channel.getlineProgramAsync();
        }
        
        public System.Threading.Tasks.Task<chanenetWcf.ProcessResoult> LineRegisterUserAsync(int User_id)
        {
            return base.Channel.LineRegisterUserAsync(User_id);
        }
        
        public System.Threading.Tasks.Task<chanenetWcf.ProcessResoult> sentNotifyAsync(string Message)
        {
            return base.Channel.sentNotifyAsync(Message);
        }
        
        public System.Threading.Tasks.Task<chanenetWcf.getlineUserResponse> getlineUserAsync(chanenetWcf.getlineUserRequest request)
        {
            return base.Channel.getlineUserAsync(request);
        }
        
        public System.Threading.Tasks.Task<chanenetWcf.ProcessResoult> getAccesTokenUserAsync(string code, System.Nullable<int> id)
        {
            return base.Channel.getAccesTokenUserAsync(code, id);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IServiceInterface))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IServiceInterface))
            {
                return new System.ServiceModel.EndpointAddress("http://chananet.somee.com/chanenetWcf/chanenetWcf.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return ServiceInterfaceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IServiceInterface);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return ServiceInterfaceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IServiceInterface);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IServiceInterface,
        }
    }
}
